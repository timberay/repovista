version: '3.8'

services:
  backend:
    image: repovista-backend:latest
    container_name: repovista-backend
    restart: unless-stopped
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - REGISTRY_URL=${REGISTRY_URL}
      - REGISTRY_USERNAME=${REGISTRY_USERNAME}
      - REGISTRY_PASSWORD=${REGISTRY_PASSWORD}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - USE_MOCK_DATA=${USE_MOCK_DATA:-false}
    env_file:
      - .env
    networks:
      - repovista-network
    volumes:
      - backend-logs:/app/logs
      - backend-cache:/app/.cache
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/health')"]
      interval: 30s
      timeout: 3s
      start_period: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    image: repovista-frontend:latest
    container_name: repovista-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - repovista-network
    volumes:
      - nginx-logs:/var/log/nginx
      - nginx-cache:/var/cache/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  repovista-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
    driver_opts:
      com.docker.network.bridge.name: br-repovista

volumes:
  backend-logs:
    driver: local
  backend-cache:
    driver: local
  nginx-logs:
    driver: local
  nginx-cache:
    driver: local